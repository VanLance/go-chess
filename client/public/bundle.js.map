{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAqC;AACS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO,EAAE,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB,EAAE,QAAQ;AAC9E,uCAAuC,WAAW;AAClD;AACA,qCAAqC,WAAW,GAAG,oCAAoC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAAU;AACtB,aAAa,8CAAU;AACvB,gBAAgB,8CAAU;AAC1B;AACA;AACA;AACA;AACA,YAAY,8CAAU;AACtB,aAAa,8CAAU;AACvB,gBAAgB,8CAAU;AAC1B;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAM;AACtB,QAAQ,8CAAM,SAAS,8CAAU;AACjC;AACA,YAAY,8CAAM;AAClB,yBAAyB,8CAAM;AAC/B;AACA,YAAY,8CAAU;AACtB;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA,iBAAiB,8CAAU;AAC3B,YAAY,8CAAU;AACtB;AACA;AACA;AACA;AACA,QAAQ,8CAAU;AAClB,QAAQ,8CAAU;AAClB,QAAQ,mDAAO,gBAAgB,8CAAU;AACzC,QAAQ,8CAAU,2BAA2B;AAC7C,QAAQ,8CAAU,0BAA0B;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuF;;;;;;;;;;;;;;;;;;AC1IX;AACtC;AACtC;AACA,iEAAkB;AAClB,mDAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAW;AACf,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA,sEAAsE,+CAAO;AAC5C;;;;;;;;;;;;;;;;;;AC9Dc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAAU;AACtB,YAAY,gDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,kBAAkB;AAC9D;;;;;;;UC1CpC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://client/./src/chessSquares.ts","webpack://client/./src/index.ts","webpack://client/./src/websocket.ts","webpack://client/webpack/bootstrap","webpack://client/webpack/runtime/define property getters","webpack://client/webpack/runtime/hasOwnProperty shorthand","webpack://client/webpack/runtime/make namespace object","webpack://client/webpack/before-startup","webpack://client/webpack/startup","webpack://client/webpack/after-startup"],"sourcesContent":["import { chessState } from './index';\nimport { player, sendMsg } from \"./websocket\";\nconst xNumbers = {\n    1: 'A',\n    2: 'B',\n    3: 'C',\n    4: 'D',\n    5: 'E',\n    6: 'F',\n    7: 'G',\n    8: 'H',\n};\nfunction createChessSquares() {\n    for (let number = 9; number >= 0; number--) {\n        for (const letter of ' ABCDEFGH1') {\n            const div = createChessDiv(number, letter);\n            addChessSquare(div);\n        }\n    }\n}\nfunction createChessDiv(number, letter) {\n    const div = document.createElement('div');\n    div.id = `${letter}${number}`;\n    if ((number === 0 || number === 9) && letter != ' ' && letter != '1') {\n        if (letter != ' ' && letter != '1') {\n            div.classList.add('letter');\n            div.innerText = letter;\n        }\n    }\n    else if (letter === ' ' || letter === '1') {\n        if (number != 9 && number != 0) {\n            div.innerText = number.toString();\n        }\n        if (letter === ' ' || letter === '1') {\n            div.classList.add('border-number');\n        }\n        if (letter === ' ') {\n            div.classList.add('left-border');\n        }\n    }\n    else {\n        if (number % 2 === 0) {\n            div.classList.add('gray');\n        }\n        else\n            div.classList.add('light-gray');\n        div.classList.add('chess-square');\n    }\n    div.addEventListener('click', () => {\n        getPosition(div);\n        checkForMove();\n    });\n    return div;\n}\nfunction addChessSquare(div) {\n    document.getElementsByTagName('main')[0]?.appendChild(div);\n}\nfunction addPieces(...pieces) {\n    for (const piece of pieces) {\n        const square = document.querySelector(`#${xNumbers[piece.X]}${piece.Y}`);\n        square.classList.add(`player-${piece.Team}`);\n        const img = document.createElement('img');\n        img.src = `./static/images/${piece.Name}-${piece.Team == 1 ? 'white' : 'black'}.png`;\n        square.appendChild(img);\n    }\n}\nfunction clearPieces() {\n    const squares = document.getElementsByClassName('chess-square');\n    for (const square of squares) {\n        clearClasses();\n        square.innerHTML = '';\n    }\n}\nfunction clearClasses() {\n    const player1Divs = document.querySelectorAll('.player-1');\n    const player2Divs = document.querySelectorAll('.player-2');\n    for (const div of [...player1Divs, ...player2Divs]) {\n        div.classList.remove('player-1');\n        div.classList.remove('player-2');\n    }\n    clearActiveSquare();\n}\nfunction clearActiveSquare() {\n    const activeSquare = document.querySelector(`.selected-square`);\n    activeSquare?.classList.toggle('selected-square');\n}\nfunction checkCastle(player, div) {\n    if (player.Team == 1 && div.id == 'E1') {\n        if (chessState.move?.startingPosition.Y === 1 &&\n            (chessState.move?.startingPosition.X === 'A' ||\n                chessState.move?.startingPosition.X === 'H')) {\n            return true;\n        }\n    }\n    else if (player.Team == 2 && div.id == 'E8') {\n        if (chessState.move?.startingPosition.Y === 8 &&\n            (chessState.move?.startingPosition.X === 'A' ||\n                chessState.move?.startingPosition.X === 'H')) {\n            return true;\n        }\n    }\n}\nfunction getPosition(div) {\n    console.log(player, \"PLAYER !\");\n    if (player.Team == chessState.playerTurn.Team) {\n        const squarePlayer = getPlayerFromDiv(div.classList);\n        if (player.Team.toString() === squarePlayer?.[squarePlayer.length - 1] &&\n            !checkCastle(player, div)) {\n            clearActiveSquare();\n            chessState.move = {\n                startingPosition: getPositionFromDivId(div.id),\n                landingPosition: { X: 0, Y: 0 },\n            };\n            div.classList.add('selected-square');\n        }\n        else if (chessState.move) {\n            chessState.move.landingPosition = getPositionFromDivId(div.id);\n        }\n    }\n}\nfunction checkForMove() {\n    if (chessState.move?.startingPosition.X &&\n        chessState.move?.landingPosition.X) {\n        sendMsg(JSON.stringify(chessState.move));\n        chessState.move.startingPosition = { X: 0, Y: 0 };\n        chessState.move.landingPosition = { X: 0, Y: 0 };\n    }\n}\nfunction getPositionFromDivId(divId) {\n    return { X: divId[0], Y: parseInt(divId[1]) };\n}\nfunction getPlayerFromDiv(divClassList) {\n    for (const clss of divClassList) {\n        if (clss.substring(0, 6) === 'player') {\n            return clss;\n        }\n    }\n}\nexport { createChessSquares, createChessDiv, addChessSquare, addPieces, clearPieces, };\n","import { addPieces, clearPieces, createChessSquares } from './chessSquares';\nimport { connect } from './websocket';\nlet chessState;\ncreateChessSquares();\nconnect();\nasync function startGame() {\n    const res = await fetch(\"http://localhost:8080/\");\n    if (res.ok) {\n        const data = await res.json();\n        chessState = {\n            playerTurn: data.PlayerTurn,\n            pieces: [...data.PlayerOnePieces, ...data.PlayerTwoPieces],\n        };\n        updateChessState(data);\n        console.log(\"Response Data:\", data);\n        return data;\n    }\n    else {\n        console.error('HTTP error:', res.status);\n    }\n}\nasync function makeMove() {\n    const res = await fetch(\"http://localhost:8080/make-move\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n            previousState: chessState.pieces,\n            move: {\n                startingPosition: chessState.move.startingPosition.X + chessState.move.startingPosition.Y.toString(),\n                landingPosition: chessState.move.landingPosition.X + chessState.move.landingPosition.Y.toString(),\n                player: chessState.playerTurn\n            }\n        })\n    });\n    if (res.ok) {\n        const data = await res.json();\n        updateChessState(data);\n        console.log(\"Response Data:\", data);\n        return data;\n    }\n    else {\n        console.error('HTTP error:', res.status);\n    }\n}\n;\nfunction updateChessState(data) {\n    chessState.playerTurn = data.PlayerTurn;\n    chessState.pieces = [];\n    chessState.pieces.push(...data.PlayerOnePieces, ...data.PlayerTwoPieces);\n    updatePlayerTurn();\n    clearPieces();\n    addPieces(...data.PlayerOnePieces, ...data.PlayerTwoPieces);\n}\nfunction updatePlayerTurn() {\n    let playerTurnP = document.getElementById('player-turn');\n    playerTurnP.innerText = playerTurnP?.innerText.substring(0, playerTurnP.innerHTML?.length - 2) + ' ' + chessState.playerTurn.Team;\n}\n(async () => { (await startGame()); })();\n// connect()\ndocument.getElementById('webpack-connect')?.addEventListener('click', connect);\nexport { makeMove, chessState, };\n","import { chessState, makeMove } from \"./index\";\nvar socket = new WebSocket(\"ws://localhost:8080/ws\");\nlet player;\nlet connect = () => {\n    console.log(\"Attempting Connection...\");\n    socket.onopen = () => {\n        console.log(\"Successfully Connected\");\n    };\n    socket.onmessage = event => {\n        let message = JSON.parse(event.data);\n        if (message.body === \"player-1\") {\n            player = {\n                username: '',\n                Team: 1\n            };\n        }\n        else if (message.body === \"player-2\") {\n            player = {\n                username: '',\n                Team: 2\n            };\n        }\n        else {\n            message = JSON.parse(message.body);\n            chessState.move = message;\n            makeMove();\n        }\n        console.log(\"Received message:\", message);\n        console.log(player);\n    };\n    socket.onclose = event => {\n        console.log(\"Socket Closed Connection: \", event);\n    };\n    socket.onerror = error => {\n        console.log(\"Socket Error: \", error);\n    };\n};\nlet sendMsg = (msg) => {\n    console.log(\"sending msg: \", msg);\n    socket.send(msg);\n};\ndocument.getElementById('webpack-broadcast')?.addEventListener('click', () => { sendMsg(\"TEST\"); });\nexport { connect, sendMsg, player };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}